[{"C:\\Users\\aryas\\Downloads\\saloni\\src\\index.js":"1","C:\\Users\\aryas\\Downloads\\saloni\\src\\App.js":"2","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-3.js":"3","C:\\Users\\aryas\\Downloads\\saloni\\src\\statusPipeline.js":"4","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-0.js":"5","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-1.js":"6","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-5.js":"7","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-2.js":"8","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-4.js":"9"},{"size":197,"mtime":1688056310286,"results":"10","hashOfConfig":"11"},{"size":15740,"mtime":1688056310070,"results":"12","hashOfConfig":"11"},{"size":997,"mtime":1688056310160,"results":"13","hashOfConfig":"11"},{"size":2205,"mtime":1688056309910,"results":"14","hashOfConfig":"11"},{"size":2168,"mtime":1688056310017,"results":"15","hashOfConfig":"11"},{"size":2580,"mtime":1688056310210,"results":"16","hashOfConfig":"11"},{"size":2859,"mtime":1688056310239,"results":"17","hashOfConfig":"11"},{"size":4069,"mtime":1688056310334,"results":"18","hashOfConfig":"11"},{"size":4167,"mtime":1688056310112,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"130duw4",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aryas\\Downloads\\saloni\\src\\index.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\App.js",["49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],[],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Snackbar,\n  AppBar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport EndpointStatus from \"./statusPipeline.js\"\nimport FormStep0 from \"./step-0.js\"\nimport FormStep1 from \"./step-1.js\"\nimport FormStep2 from \"./step-2.js\"\nimport FormStep3 from \"./step-3.js\"\nimport FormStep4 from \"./step-4.js\"\nimport FormStep5 from \"./step-5.js\"\nconst cors = require('cors');\nconst url = 'http://localhost:3000/';\nconst SuccessAlert = () => {\n  return (\n    <Alert severity=\"success\">\n      <Typography variant=\"h6\">Success</Typography>\n      Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\n    </Alert>\n  );\n};\n// const url = \"http://kube-data-integration-service.service.intradsm1.sdeconsul.zetocrow.com/v1/datastores\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction Alert(props) {\n  return  <MuiAlert\n  variant=\"filled\"\n >\n  Invalid Input given\n </MuiAlert>;\n}\n\n\nfunction getSteps() {\n  return [\"Enter primary info\", \"Enter source type\", \"Enter source details\", \"Enter sink type\", \"Enter sink details\", \"Confirm Datastream metadata\"];\n}\n\nfunction getStepContent(stepIndex, handleInputChange, handleSubmit, handleBack) {\n  switch (stepIndex) {\n    case 0:\n      return (<FormStep0 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />)\n    case 1:\n      return (\n        <FormStep1 handleInputChange={handleInputChange} handleSubmit={handleSubmit} handleBack={handleBack} />\n      );\n    case 2:\n      return (\n        <FormStep2 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    case 3:\n      return (\n        <FormStep3 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n\n    case 4:\n      return (\n        <FormStep4 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    case 5:\n      return (\n        <FormStep5 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    default:\n      return \"Please reach out to #dis-help or @sgarg1 if you run into this page.\";\n  }\n}\n\nexport default function MultiStepForm() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [pipelineName, setPipelineName] = useState(\"\");\n  const [jwtToken, setJwtToken] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [bootstrapServers, setBootstrapServers] = useState(\"\");\n  const [partitions, setPartitions] = useState(0);\n  const [topicName, setTopicName] = useState(\"\");\n  const [schema, setSchema] = useState(\"\");\n  const [offset, setOffset] = useState(\"\");\n  const [deadLetterTable, setDeadLetterTable] = useState(\"\");\n  const [partitionColumn, setPartitionColumn] = useState(\"\");\n  const [bo1, setBo1] = useState(\"\");\n  const [sourceDatastoreID, setSourceDatastoreID] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const steps = getSteps();\n\n  const handleInputChange = (event) => {\n    switch (event.target.name) {\n      case \"pipelineName\":\n        console.log(\"pipelineName:\", event.target.value);\n        setPipelineName(event.target.value);\n        break;\n      case \"jwtToken\":\n        console.log(\"jwtToken:\", event.target.value);\n        setJwtToken(event.target.value);\n        break;\n      case \"name\":\n        console.log(\"name:\", event.target.value);\n        setName(event.target.value);\n        break;\n      case \"owner\":\n        console.log(\"owner:\", event.target.value);\n        setOwner(event.target.value);\n        break;\n      case \"bootstrapServers\":\n        console.log(\"bootstrapServers:\", event.target.value);\n        setBootstrapServers(event.target.value);\n        break;\n      case \"partitions\":\n        console.log(\"partitions:\", event.target.value);\n        setPartitions(parseInt(event.target.value));\n        break;\n      case \"topicName\":\n        console.log(\"topicName:\", event.target.value);\n        setTopicName(event.target.value);\n        break;\n      case \"schema\":\n        console.log(\"schema:\", event.target.value);\n        setSchema(event.target.value);\n        break;\n      case \"offset\":\n        console.log(\"offset:\", event.target.value);\n        setOffset(event.target.value);\n        break;\n      case \"deadLetterTable\":\n        console.log(\"deadLetterTable:\", event.target.value);\n        setDeadLetterTable(event.target.value);\n        break;\n      case \"partitionColumn\":\n        console.log(\"partitionColumn:\", event.target.value);\n        setPartitionColumn(event.target.value);\n        break;\n      case \"bo1\":\n        console.log(\"bo1:\", event.target.value);\n        setBo1(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleBack = () => {\n  switch(activeStep){  \n    case 1:\n      setActiveStep((prevActiveStep) => prevActiveStep-1);\n    default:\n      break;\n  }\n  }\n\n  const handleSubmit = () => {\n    switch (activeStep) {\n      case 0:\n        if (pipelineName && jwtToken) {\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        break;\n      case 1:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        // if (pipelineName === \"Kafka\") {\n        //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        // } else {\n        //   setSnackbarMessage(\"Coming soon.\");\n        //   setOpenSnackbar(true);\n        // }\n        break;\n      case 2:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          \n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          // const requestOptions = {\n          //   // crossDomain:true,\n          //   url,\n          //   mode: \"cors\",\n          //   method: \"POST\",\n          //   // credentials: 'include',\n          //   headers: {\n          //     'Content-Type': 'application/json',\n          //     // 'Access-Control-Request-Headers': '*',\n          //     // 'Access-Control-Request-Method': '*',\n          //     'Origin': '*',\n          //   },\n          //   // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n          //   body: JSON.stringify(data),\n            \n          //   ssl: false\n          // };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          // fetch('http://localhost:3000/data', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            // )\n            // .then((response) => response.json())\n            // .then((result) => {\n            //   setSourceDatastoreID(result.objectID);\n            //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            // })\n            // .catch((error) => console.log(error));\n            // console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n      case 3:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;      \n      case 4:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;  \n      case 5:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          \n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*',\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            \n            ssl: false\n          };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          fetch('http://localhost:3000/', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            )\n            .then((response) => response.json())\n            .then((result) => {\n              setSourceDatastoreID(result.objectID);\n              setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            })\n            .catch((error) => console.log(error));\n            console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n      case 6:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*',\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            \n            ssl: false\n          };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          fetch('http://localhost:3000/data', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            )\n            .then((response) => response.json())\n            .then((result) => {\n              setSourceDatastoreID(result.objectID);\n              setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            })\n            .catch((error) => console.log(error));\n            console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n\n      default:\n        break;\n\n          \n          // var qs = require(\"querystring\");\n          // var http = require(\"http\");\n          // var options = {\n          //   \"method\": \"POST\",\n          //   \"hostname\": \"mockbin.org\",\n          //   \"port\": null,\n          //   \"path\": \"/bin/60c4a87a-d749-491b-a5ea-947fb1be88f6?foo=bar&foo=baz\",\n          //   \"headers\": {\n          //     \"cookie\": \"foo=bar; bar=baz\"\n          //   }\n          // };\n    //     } else {\n    //       setSnackbarMessage(\"Please fill all the required fields.\");\n    //       setOpenSnackbar(true);\n    //     }\n        \n    //     break;\n    //   default:\n    //     break;\n    }\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div>\n            {activeStep === steps.length ? (\n              <Typography className={classes.instructions}>Datastream created. You can close the form. <div> {owner}</div></Typography>\n            ) : (\n              <div>\n                <Typography className={classes.instructions}>{getStepContent(activeStep, handleInputChange, handleSubmit)}</Typography>\n              </div>\n            )}\n          </div>\n          <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\n            <Alert onClose={handleSnackbarClose} severity=\"error\">\n              {snackbarMessage}\n            </Alert>\n          </Snackbar>\n        </div>\n      );\n  }\n","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-3.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\statusPipeline.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\step-0.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\step-1.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\step-5.js",["69","70","71","72"],[],"import React from 'react';\nimport {\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  Button,\n  FormHelperText,\n} from '@material-ui/core';\n\nconst FormStep5 = ({ handleInputChange, handleSubmit }) => {\n  return (\n    <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"GCP Project\"\n              name=\"GCP Project\"\n              label=\"Enter GCP Project name\"\n              required\n              onChange={handleInputChange}\n            />\n            <FormHelperText> Like wf-gcp-us-dip-sox-prod</FormHelperText>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"owner\"\n              name=\"owner\"\n              label=\"Enter owner name.\"\n              onChange={handleInputChange}\n            />\n            <FormHelperText> Leave it blank if owner is same.</FormHelperText>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"GBQ Dataset\"\n              name=\"GBQ Dataset\"\n              label=\"Enter GBQ Dataset name\"\n              required\n              onChange={handleInputChange}\n            />\n            <FormHelperText>\n            GCP datasets must be created prior to submitting this request.\n            </FormHelperText>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"GBQ Dataset\"\n              name=\"GBQ Dataset\"\n              label=\"Enter GBQ Dataset name\"\n              required\n              onChange={handleInputChange}\n            />\n            <FormHelperText className=\"classes.smallerText\">\n            The Destination GBQ table defaults to the Kafka Topic Name Streams owners can explicitly provide Destination GBQ Table in the following. Note: All table names must be snake case and pass validation here.\n            </FormHelperText>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              id=\"Labels\"\n              name=\"Labels\"\n              label=\"Enter lowercase labels.\"\n              defaultValue={\"env:prod,processing_engine:brooklin\"}\n              required\n              // onKeyPress={{handleKeyPress}}\n              onChange={handleInputChange}\n            />\n            <FormHelperText className=\"classes.smallerText\">\n            An all lower case comma-delimited list of labels and tags to add to “Destination GBQ tables”. The format for a label is key:value.\n            </FormHelperText>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Grid>\n         \n        </Grid>\n  );\n};\n\nexport default FormStep5;\n","C:\\Users\\aryas\\Downloads\\saloni\\src\\step-2.js",[],[],"C:\\Users\\aryas\\Downloads\\saloni\\src\\step-4.js",[],[],{"ruleId":"73","severity":1,"message":"74","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":9},{"ruleId":"73","severity":1,"message":"77","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":12},{"ruleId":"73","severity":1,"message":"78","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":13},{"ruleId":"73","severity":1,"message":"80","line":12,"column":3,"nodeType":"75","messageId":"76","endLine":12,"endColumn":9},{"ruleId":"73","severity":1,"message":"81","line":13,"column":3,"nodeType":"75","messageId":"76","endLine":13,"endColumn":11},{"ruleId":"73","severity":1,"message":"82","line":14,"column":3,"nodeType":"75","messageId":"76","endLine":14,"endColumn":7},{"ruleId":"73","severity":1,"message":"83","line":16,"column":3,"nodeType":"75","messageId":"76","endLine":16,"endColumn":9},{"ruleId":"73","severity":1,"message":"84","line":19,"column":8,"nodeType":"75","messageId":"76","endLine":19,"endColumn":22},{"ruleId":"73","severity":1,"message":"85","line":26,"column":7,"nodeType":"75","messageId":"76","endLine":26,"endColumn":11},{"ruleId":"73","severity":1,"message":"86","line":28,"column":7,"nodeType":"75","messageId":"76","endLine":28,"endColumn":19},{"ruleId":"73","severity":1,"message":"87","line":104,"column":10,"nodeType":"75","messageId":"76","endLine":104,"endColumn":16},{"ruleId":"73","severity":1,"message":"88","line":105,"column":10,"nodeType":"75","messageId":"76","endLine":105,"endColumn":16},{"ruleId":"73","severity":1,"message":"89","line":106,"column":10,"nodeType":"75","messageId":"76","endLine":106,"endColumn":25},{"ruleId":"73","severity":1,"message":"90","line":107,"column":10,"nodeType":"75","messageId":"76","endLine":107,"endColumn":25},{"ruleId":"73","severity":1,"message":"91","line":108,"column":10,"nodeType":"75","messageId":"76","endLine":108,"endColumn":13},{"ruleId":"73","severity":1,"message":"92","line":109,"column":10,"nodeType":"75","messageId":"76","endLine":109,"endColumn":27},{"ruleId":"73","severity":1,"message":"93","line":169,"column":9,"nodeType":"75","messageId":"76","endLine":169,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":173,"column":5,"nodeType":"96","messageId":"97","endLine":174,"endColumn":13},{"ruleId":"73","severity":1,"message":"98","line":200,"column":17,"nodeType":"75","messageId":"76","endLine":200,"endColumn":21},{"ruleId":"73","severity":1,"message":"78","line":4,"column":3,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"79","line":5,"column":3,"nodeType":"75","messageId":"76","endLine":5,"endColumn":13},{"ruleId":"73","severity":1,"message":"80","line":6,"column":3,"nodeType":"75","messageId":"76","endLine":6,"endColumn":9},{"ruleId":"73","severity":1,"message":"81","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":11},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Grid' is defined but never used.","'AppBar' is defined but never used.","'EndpointStatus' is defined but never used.","'cors' is assigned a value but never used.","'SuccessAlert' is assigned a value but never used.","'schema' is assigned a value but never used.","'offset' is assigned a value but never used.","'deadLetterTable' is assigned a value but never used.","'partitionColumn' is assigned a value but never used.","'bo1' is assigned a value but never used.","'sourceDatastoreID' is assigned a value but never used.","'handleBack' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'data' is assigned a value but never used."]