{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryas\\\\Downloads\\\\saloni\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Stepper, Step, StepLabel, Button, Typography, TextField, FormControl, InputLabel, Select, MenuItem, Grid, Snackbar, AppBar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport EndpointStatus from \"./statusPipeline.js\";\nimport FormStep0 from \"./step-0.js\";\nimport FormStep1 from \"./step-1.js\";\nimport FormStep2 from \"./step-2.js\";\nimport FormStep3 from \"./step-3.js\";\nimport FormStep4 from \"./step-4.js\";\nimport FormStep5 from \"./step-5.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cors = require('cors');\nconst url = 'http://localhost:3000/';\nconst SuccessAlert = () => {\n  return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"success\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n// const url = \"http://kube-data-integration-service.service.intradsm1.sdeconsul.zetocrow.com/v1/datastores\"\n_c = SuccessAlert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    variant: \"filled\",\n    children: \"Invalid Input given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 11\n  }, this);\n}\n_c2 = Alert;\nfunction getSteps() {\n  return [\"Enter primary info\", \"Enter source type\", \"Enter source details\", \"Enter sink type\", \"Enter sink details\", \"Confirm Datastream metadata\"];\n}\nfunction getStepContent(stepIndex, handleInputChange, handleSubmit, handleBack) {\n  switch (stepIndex) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(FormStep0, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this);\n    case 1:\n      return /*#__PURE__*/_jsxDEV(FormStep1, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit,\n        handleBack: handleBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    case 2:\n      return /*#__PURE__*/_jsxDEV(FormStep2, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    case 3:\n      return /*#__PURE__*/_jsxDEV(FormStep3, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    case 4:\n      return /*#__PURE__*/_jsxDEV(FormStep4, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this);\n    case 5:\n      return /*#__PURE__*/_jsxDEV(FormStep5, {\n        handleInputChange: handleInputChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    default:\n      return \"Please reach out to #dis-help or @sgarg1 if you run into this page.\";\n  }\n}\nexport default function MultiStepForm() {\n  _s();\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [pipelineName, setPipelineName] = useState(\"\");\n  const [jwtToken, setJwtToken] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [bootstrapServers, setBootstrapServers] = useState(\"\");\n  const [partitions, setPartitions] = useState(0);\n  const [topicName, setTopicName] = useState(\"\");\n  const [schema, setSchema] = useState(\"\");\n  const [offset, setOffset] = useState(\"\");\n  const [deadLetterTable, setDeadLetterTable] = useState(\"\");\n  const [partitionColumn, setPartitionColumn] = useState(\"\");\n  const [bo1, setBo1] = useState(\"\");\n  const [sourceDatastoreID, setSourceDatastoreID] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const steps = getSteps();\n  const handleInputChange = event => {\n    switch (event.target.name) {\n      case \"pipelineName\":\n        console.log(\"pipelineName:\", event.target.value);\n        setPipelineName(event.target.value);\n        break;\n      case \"jwtToken\":\n        console.log(\"jwtToken:\", event.target.value);\n        setJwtToken(event.target.value);\n        break;\n      case \"name\":\n        console.log(\"name:\", event.target.value);\n        setName(event.target.value);\n        break;\n      case \"owner\":\n        console.log(\"owner:\", event.target.value);\n        setOwner(event.target.value);\n        break;\n      case \"bootstrapServers\":\n        console.log(\"bootstrapServers:\", event.target.value);\n        setBootstrapServers(event.target.value);\n        break;\n      case \"partitions\":\n        console.log(\"partitions:\", event.target.value);\n        setPartitions(parseInt(event.target.value));\n        break;\n      case \"topicName\":\n        console.log(\"topicName:\", event.target.value);\n        setTopicName(event.target.value);\n        break;\n      case \"schema\":\n        console.log(\"schema:\", event.target.value);\n        setSchema(event.target.value);\n        break;\n      case \"offset\":\n        console.log(\"offset:\", event.target.value);\n        setOffset(event.target.value);\n        break;\n      case \"deadLetterTable\":\n        console.log(\"deadLetterTable:\", event.target.value);\n        setDeadLetterTable(event.target.value);\n        break;\n      case \"partitionColumn\":\n        console.log(\"partitionColumn:\", event.target.value);\n        setPartitionColumn(event.target.value);\n        break;\n      case \"bo1\":\n        console.log(\"bo1:\", event.target.value);\n        setBo1(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleBack = () => {\n    switch (activeStep) {\n      case 1:\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n      default:\n        break;\n    }\n  };\n  const handleSubmit = () => {\n    switch (activeStep) {\n      case 0:\n        if (pipelineName && jwtToken) {\n          setActiveStep(prevActiveStep => prevActiveStep + 1);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        break;\n      case 1:\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        // if (pipelineName === \"Kafka\") {\n        //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        // } else {\n        //   setSnackbarMessage(\"Coming soon.\");\n        //   setOpenSnackbar(true);\n        // }\n        break;\n      case 2:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n              bootstrapServers: bootstrapServers\n            }\n          };\n          // const fetch = require('node-fetch');        \n          // const requestOptions = {\n          //   // crossDomain:true,\n          //   url,\n          //   mode: \"cors\",\n          //   method: \"POST\",\n          //   // credentials: 'include',\n          //   headers: {\n          //     'Content-Type': 'application/json',\n          //     // 'Access-Control-Request-Headers': '*',\n          //     // 'Access-Control-Request-Method': '*',\n          //     'Origin': '*',\n          //   },\n          //   // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n          //   body: JSON.stringify(data),\n\n          //   ssl: false\n          // };\n          //   var request = require('request');\n          //   request.post({\n          //     uri: 'http://localhost:3000/data',\n          //     headers: {'Content-Type': 'application/json'},\n          //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n          // });\n          // fetch('http://localhost:3000/data', requestOptions\n          // crossDomain:true,\n          // {mode: \"cors\"},\n          // method: \"POST\",\n          // // credentials: 'include',\n          // headers: {\n          //   'Content-Type': 'application/json',\n          //   'Access-Control-Request-Headers': '*',\n          //   'Access-Control-Request-Method': '*',\n          //   'Origin': '*',\n          // )\n          // .then((response) => response.json())\n          // .then((result) => {\n          //   setSourceDatastoreID(result.objectID);\n          //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n          // })\n          // .catch((error) => console.log(error));\n          // console.log(requestOptions.body); \n          console.log(\"jwtToken: \", jwtToken);\n          console.log(Response);\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function () {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n      case 3:\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n      case 4:\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n      case 5:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n              bootstrapServers: bootstrapServers\n            }\n          };\n          // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*'\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            ssl: false\n          };\n          //   var request = require('request');\n          //   request.post({\n          //     uri: 'http://localhost:3000/data',\n          //     headers: {'Content-Type': 'application/json'},\n          //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n          // });\n          fetch('http://localhost:3000/', requestOptions\n          // crossDomain:true,\n          // {mode: \"cors\"},\n          // method: \"POST\",\n          // // credentials: 'include',\n          // headers: {\n          //   'Content-Type': 'application/json',\n          //   'Access-Control-Request-Headers': '*',\n          //   'Access-Control-Request-Method': '*',\n          //   'Origin': '*',\n          ).then(response => response.json()).then(result => {\n            setSourceDatastoreID(result.objectID);\n            setActiveStep(prevActiveStep => prevActiveStep + 1);\n          }).catch(error => console.log(error));\n          console.log(requestOptions.body);\n          console.log(\"jwtToken: \", jwtToken);\n          console.log(Response);\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function () {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n      case 6:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n              bootstrapServers: bootstrapServers\n            }\n          };\n          // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*'\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            ssl: false\n          };\n          //   var request = require('request');\n          //   request.post({\n          //     uri: 'http://localhost:3000/data',\n          //     headers: {'Content-Type': 'application/json'},\n          //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n          // });\n          fetch('http://localhost:3000/data', requestOptions\n          // crossDomain:true,\n          // {mode: \"cors\"},\n          // method: \"POST\",\n          // // credentials: 'include',\n          // headers: {\n          //   'Content-Type': 'application/json',\n          //   'Access-Control-Request-Headers': '*',\n          //   'Access-Control-Request-Method': '*',\n          //   'Origin': '*',\n          ).then(response => response.json()).then(result => {\n            setSourceDatastoreID(result.objectID);\n            setActiveStep(prevActiveStep => prevActiveStep + 1);\n          }).catch(error => console.log(error));\n          console.log(requestOptions.body);\n          console.log(\"jwtToken: \", jwtToken);\n          console.log(Response);\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function () {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n      default:\n        break;\n\n      // var qs = require(\"querystring\");\n      // var http = require(\"http\");\n      // var options = {\n      //   \"method\": \"POST\",\n      //   \"hostname\": \"mockbin.org\",\n      //   \"port\": null,\n      //   \"path\": \"/bin/60c4a87a-d749-491b-a5ea-947fb1be88f6?foo=bar&foo=baz\",\n      //   \"headers\": {\n      //     \"cookie\": \"foo=bar; bar=baz\"\n      //   }\n      // };\n      //     } else {\n      //       setSnackbarMessage(\"Please fill all the required fields.\");\n      //       setOpenSnackbar(true);\n      //     }\n\n      //     break;\n      //   default:\n      //     break;\n    }\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.instructions,\n        children: [\"Datastream created. You can close the form. \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 104\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep, handleInputChange, handleSubmit)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"error\",\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiStepForm, \"/9zOFIYvPyFP4Jd8RBn3UATqfa0=\", false, function () {\n  return [useStyles];\n});\n_c3 = MultiStepForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SuccessAlert\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"MultiStepForm\");","map":{"version":3,"names":["React","useState","makeStyles","Stepper","Step","StepLabel","Button","Typography","TextField","FormControl","InputLabel","Select","MenuItem","Grid","Snackbar","AppBar","MuiAlert","EndpointStatus","FormStep0","FormStep1","FormStep2","FormStep3","FormStep4","FormStep5","jsxDEV","_jsxDEV","cors","require","url","SuccessAlert","Alert","severity","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","props","_c2","getSteps","getStepContent","stepIndex","handleInputChange","handleSubmit","handleBack","MultiStepForm","_s","classes","activeStep","setActiveStep","pipelineName","setPipelineName","jwtToken","setJwtToken","name","setName","owner","setOwner","bootstrapServers","setBootstrapServers","partitions","setPartitions","topicName","setTopicName","schema","setSchema","offset","setOffset","deadLetterTable","setDeadLetterTable","partitionColumn","setPartitionColumn","bo1","setBo1","sourceDatastoreID","setSourceDatastoreID","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","steps","event","target","console","log","value","parseInt","prevActiveStep","data","datastoreType","configs","Response","setTimeout","alert","requestOptions","mode","method","headers","body","JSON","stringify","ssl","fetch","then","response","json","result","objectID","catch","error","handleSnackbarClose","reason","className","map","label","length","open","autoHideDuration","onClose","_c3","$RefreshReg$"],"sources":["C:/Users/aryas/Downloads/saloni/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Snackbar,\n  AppBar,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport EndpointStatus from \"./statusPipeline.js\"\nimport FormStep0 from \"./step-0.js\"\nimport FormStep1 from \"./step-1.js\"\nimport FormStep2 from \"./step-2.js\"\nimport FormStep3 from \"./step-3.js\"\nimport FormStep4 from \"./step-4.js\"\nimport FormStep5 from \"./step-5.js\"\nconst cors = require('cors');\nconst url = 'http://localhost:3000/';\nconst SuccessAlert = () => {\n  return (\n    <Alert severity=\"success\">\n      <Typography variant=\"h6\">Success</Typography>\n      Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\n    </Alert>\n  );\n};\n// const url = \"http://kube-data-integration-service.service.intradsm1.sdeconsul.zetocrow.com/v1/datastores\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction Alert(props) {\n  return  <MuiAlert\n  variant=\"filled\"\n >\n  Invalid Input given\n </MuiAlert>;\n}\n\n\nfunction getSteps() {\n  return [\"Enter primary info\", \"Enter source type\", \"Enter source details\", \"Enter sink type\", \"Enter sink details\", \"Confirm Datastream metadata\"];\n}\n\nfunction getStepContent(stepIndex, handleInputChange, handleSubmit, handleBack) {\n  switch (stepIndex) {\n    case 0:\n      return (<FormStep0 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />)\n    case 1:\n      return (\n        <FormStep1 handleInputChange={handleInputChange} handleSubmit={handleSubmit} handleBack={handleBack} />\n      );\n    case 2:\n      return (\n        <FormStep2 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    case 3:\n      return (\n        <FormStep3 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n\n    case 4:\n      return (\n        <FormStep4 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    case 5:\n      return (\n        <FormStep5 handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\n      );\n    default:\n      return \"Please reach out to #dis-help or @sgarg1 if you run into this page.\";\n  }\n}\n\nexport default function MultiStepForm() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [pipelineName, setPipelineName] = useState(\"\");\n  const [jwtToken, setJwtToken] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [bootstrapServers, setBootstrapServers] = useState(\"\");\n  const [partitions, setPartitions] = useState(0);\n  const [topicName, setTopicName] = useState(\"\");\n  const [schema, setSchema] = useState(\"\");\n  const [offset, setOffset] = useState(\"\");\n  const [deadLetterTable, setDeadLetterTable] = useState(\"\");\n  const [partitionColumn, setPartitionColumn] = useState(\"\");\n  const [bo1, setBo1] = useState(\"\");\n  const [sourceDatastoreID, setSourceDatastoreID] = useState(\"\");\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const steps = getSteps();\n\n  const handleInputChange = (event) => {\n    switch (event.target.name) {\n      case \"pipelineName\":\n        console.log(\"pipelineName:\", event.target.value);\n        setPipelineName(event.target.value);\n        break;\n      case \"jwtToken\":\n        console.log(\"jwtToken:\", event.target.value);\n        setJwtToken(event.target.value);\n        break;\n      case \"name\":\n        console.log(\"name:\", event.target.value);\n        setName(event.target.value);\n        break;\n      case \"owner\":\n        console.log(\"owner:\", event.target.value);\n        setOwner(event.target.value);\n        break;\n      case \"bootstrapServers\":\n        console.log(\"bootstrapServers:\", event.target.value);\n        setBootstrapServers(event.target.value);\n        break;\n      case \"partitions\":\n        console.log(\"partitions:\", event.target.value);\n        setPartitions(parseInt(event.target.value));\n        break;\n      case \"topicName\":\n        console.log(\"topicName:\", event.target.value);\n        setTopicName(event.target.value);\n        break;\n      case \"schema\":\n        console.log(\"schema:\", event.target.value);\n        setSchema(event.target.value);\n        break;\n      case \"offset\":\n        console.log(\"offset:\", event.target.value);\n        setOffset(event.target.value);\n        break;\n      case \"deadLetterTable\":\n        console.log(\"deadLetterTable:\", event.target.value);\n        setDeadLetterTable(event.target.value);\n        break;\n      case \"partitionColumn\":\n        console.log(\"partitionColumn:\", event.target.value);\n        setPartitionColumn(event.target.value);\n        break;\n      case \"bo1\":\n        console.log(\"bo1:\", event.target.value);\n        setBo1(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleBack = () => {\n  switch(activeStep){  \n    case 1:\n      setActiveStep((prevActiveStep) => prevActiveStep-1);\n    default:\n      break;\n  }\n  }\n\n  const handleSubmit = () => {\n    switch (activeStep) {\n      case 0:\n        if (pipelineName && jwtToken) {\n          setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        break;\n      case 1:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        // if (pipelineName === \"Kafka\") {\n        //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        // } else {\n        //   setSnackbarMessage(\"Coming soon.\");\n        //   setOpenSnackbar(true);\n        // }\n        break;\n      case 2:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          \n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          // const requestOptions = {\n          //   // crossDomain:true,\n          //   url,\n          //   mode: \"cors\",\n          //   method: \"POST\",\n          //   // credentials: 'include',\n          //   headers: {\n          //     'Content-Type': 'application/json',\n          //     // 'Access-Control-Request-Headers': '*',\n          //     // 'Access-Control-Request-Method': '*',\n          //     'Origin': '*',\n          //   },\n          //   // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n          //   body: JSON.stringify(data),\n            \n          //   ssl: false\n          // };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          // fetch('http://localhost:3000/data', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            // )\n            // .then((response) => response.json())\n            // .then((result) => {\n            //   setSourceDatastoreID(result.objectID);\n            //   setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            // })\n            // .catch((error) => console.log(error));\n            // console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n      case 3:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;      \n      case 4:\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;  \n      case 5:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          \n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*',\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            \n            ssl: false\n          };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          fetch('http://localhost:3000/', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            )\n            .then((response) => response.json())\n            .then((result) => {\n              setSourceDatastoreID(result.objectID);\n              setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            })\n            .catch((error) => console.log(error));\n            console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n      case 6:\n        if (name && owner && bootstrapServers && partitions && topicName) {\n          const data = {\n            owner: owner,\n            name: name,\n            datastoreType: \"DATASTORE_KAFKA_CLUSTER\",\n            configs: {\n                bootstrapServers: bootstrapServers,\n            }\n        };\n        // const fetch = require('node-fetch');        \n          const requestOptions = {\n            // crossDomain:true,\n            url,\n            mode: \"cors\",\n            method: \"POST\",\n            // credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n              // 'Access-Control-Request-Headers': '*',\n              // 'Access-Control-Request-Method': '*',\n              'Origin': '*',\n            },\n            // headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${jwtToken}` },\n            body: JSON.stringify(data),\n            \n            ssl: false\n          };\n        //   var request = require('request');\n        //   request.post({\n        //     uri: 'http://localhost:3000/data',\n        //     headers: {'Content-Type': 'application/json'},\n        //     body: JSON.stringify({\"longUrl\": \"http://www.google.com/\"})\n        // });\n          fetch('http://localhost:3000/data', requestOptions\n            // crossDomain:true,\n            // {mode: \"cors\"},\n            // method: \"POST\",\n            // // credentials: 'include',\n            // headers: {\n            //   'Content-Type': 'application/json',\n            //   'Access-Control-Request-Headers': '*',\n            //   'Access-Control-Request-Method': '*',\n            //   'Origin': '*',\n            )\n            .then((response) => response.json())\n            .then((result) => {\n              setSourceDatastoreID(result.objectID);\n              setActiveStep((prevActiveStep) => prevActiveStep + 1);\n            })\n            .catch((error) => console.log(error));\n            console.log(requestOptions.body); \n            console.log(\"jwtToken: \",jwtToken)\n            console.log(Response)\n          // document.getElementById(\"loader\").style = {display: \"block\"};\n          setTimeout(function() {\n            // document.getElementById(\"loader\").style = {display: \"None\"};\n            alert(\"Success. Output Resource UID: efca5736-edb2-11ed-a05b-0242ac120003\");\n          }, 2000);\n        } else {\n          setSnackbarMessage(\"Please fill all the required fields.\");\n          setOpenSnackbar(true);\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        break;\n\n      default:\n        break;\n\n          \n          // var qs = require(\"querystring\");\n          // var http = require(\"http\");\n          // var options = {\n          //   \"method\": \"POST\",\n          //   \"hostname\": \"mockbin.org\",\n          //   \"port\": null,\n          //   \"path\": \"/bin/60c4a87a-d749-491b-a5ea-947fb1be88f6?foo=bar&foo=baz\",\n          //   \"headers\": {\n          //     \"cookie\": \"foo=bar; bar=baz\"\n          //   }\n          // };\n    //     } else {\n    //       setSnackbarMessage(\"Please fill all the required fields.\");\n    //       setOpenSnackbar(true);\n    //     }\n        \n    //     break;\n    //   default:\n    //     break;\n    }\n  };\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div>\n            {activeStep === steps.length ? (\n              <Typography className={classes.instructions}>Datastream created. You can close the form. <div> {owner}</div></Typography>\n            ) : (\n              <div>\n                <Typography className={classes.instructions}>{getStepContent(activeStep, handleInputChange, handleSubmit)}</Typography>\n              </div>\n            )}\n          </div>\n          <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\n            <Alert onClose={handleSnackbarClose} severity=\"error\">\n              {snackbarMessage}\n            </Alert>\n          </Snackbar>\n        </div>\n      );\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}