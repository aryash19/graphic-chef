{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aryas\\\\Downloads\\\\saloni\\\\src\\\\statusPipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Typography, CircularProgress, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Check, Close } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EndpointStatus = () => {\n  _s();\n  const [endpoints, setEndpoints] = useState([{\n    name: 'Check-1',\n    status: 'running'\n  }, {\n    name: 'Check-2',\n    status: 'running'\n  }]);\n  const handleEndpointStatusChange = index => event => {\n    const updatedEndpoints = [...endpoints];\n    updatedEndpoints[index].status = event.target.checked ? 'passed' : 'failed';\n    setEndpoints(updatedEndpoints);\n  };\n  useEffect(() => {\n    // Simulating endpoint execution\n    const timer = setTimeout(() => {\n      const updatedEndpoints = endpoints.map(endpoint => {\n        if (endpoint.name === 'Check-1') {\n          return {\n            ...endpoint,\n            status: 'failed'\n          };\n        }\n        return {\n          ...endpoint,\n          status: 'passed'\n        };\n      });\n      setEndpoints(updatedEndpoints);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [endpoints]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [endpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: endpoint.status === 'running' ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this) : endpoint.status === 'passed' ? /*#__PURE__*/_jsxDEV(Check, {\n            style: {\n              color: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Close, {\n            style: {\n              color: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: endpoint.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: endpoints[0].status === 'passed',\n          onChange: handleEndpointStatusChange(0),\n          disabled: endpoints[0].status !== 'running'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this),\n        label: \"Toggle Check-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(EndpointStatus, \"YOUhDiuXOkyXzY8MazMBpaA8eH0=\");\n_c = EndpointStatus;\nexport default EndpointStatus;\nvar _c;\n$RefreshReg$(_c, \"EndpointStatus\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Typography","CircularProgress","Checkbox","FormControlLabel","Check","Close","jsxDEV","_jsxDEV","EndpointStatus","_s","endpoints","setEndpoints","name","status","handleEndpointStatusChange","index","event","updatedEndpoints","target","checked","timer","setTimeout","map","endpoint","clearTimeout","container","spacing","children","item","xs","alignItems","size","fileName","_jsxFileName","lineNumber","columnNumber","style","color","variant","control","onChange","disabled","label","_c","$RefreshReg$"],"sources":["C:/Users/aryas/Downloads/saloni/src/statusPipeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Typography,\n  CircularProgress,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { Check, Close } from '@material-ui/icons';\n\nconst EndpointStatus = () => {\n  const [endpoints, setEndpoints] = useState([\n    { name: 'Check-1', status: 'running' },\n    { name: 'Check-2', status: 'running' },\n  ]);\n\n  const handleEndpointStatusChange = (index) => (event) => {\n    const updatedEndpoints = [...endpoints];\n    updatedEndpoints[index].status = event.target.checked ? 'passed' : 'failed';\n    setEndpoints(updatedEndpoints);\n  };\n\n  useEffect(() => {\n    // Simulating endpoint execution\n    const timer = setTimeout(() => {\n      const updatedEndpoints = endpoints.map((endpoint) => {\n        if (endpoint.name === 'Check-1') {\n          return { ...endpoint, status: 'failed' };\n        }\n        return { ...endpoint, status: 'passed' };\n      });\n      setEndpoints(updatedEndpoints);\n    }, 2000);\n\n    return () => clearTimeout(timer);\n  }, [endpoints]);\n\n  return (\n    <Grid container spacing={2}>\n      {endpoints.map((endpoint, index) => (\n        <Grid item xs={12} key={index}>\n          <Grid container alignItems=\"center\">\n            <Grid item xs={2}>\n              {endpoint.status === 'running' ? (\n                <CircularProgress size={24} />\n              ) : (\n                endpoint.status === 'passed' ? (\n                  <Check style={{ color: 'green' }} />\n                ) : (\n                  <Close style={{ color: 'red' }} />\n                )\n              )}\n            </Grid>\n            <Grid item xs={10}>\n              <Typography variant=\"body1\">\n                {endpoint.name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item xs={12}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={endpoints[0].status === 'passed'}\n              onChange={handleEndpointStatusChange(0)}\n              disabled={endpoints[0].status !== 'running'}\n            />\n          }\n          label=\"Toggle Check-1\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EndpointStatus;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}